pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('jenkins-aws-secret-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('jenkins-aws-secret-access-key')
        REGION = "eu-central-1"
        ECR_REPO = "234934568007.dkr.ecr.eu-central-1.amazonaws.com/ecr_repos"
        ECR_REPO_URL = "234934568007.dkr.ecr.eu-central-1.amazonaws.com"
        EKS_CLUTER_NAME = "demo_clst"
        IMAGE_NAME = "python${BUILD_ID}"
        EMAIL_INFORM = 'kraj@tsteps.co;arunlakshmanan@tsteps.co;srini_temp@tsteps.co;rakesh_temp@tsteps.co'

    }
    stages {
        stage('DOCKER IMAGE BUILD') {
        steps {
            sh '''
                docker build -t $ECR_REPO:${IMAGE_NAME} .
                echo "completed"
                echo $IMAGE_NAME
                '''
            }
        }
        stage('DOCKER IMAGE PUSH') {
        steps {
            sh '''
                aws configure set region $REGION
                $(aws ecr get-login --region $REGION --no-include-email)
                docker push $ECR_REPO:$IMAGE_NAME
                docker logout $ECR_REPO_URL
                echo "completed"
                '''
            }
        }
    stage('deployment') {
        steps {
            sh '''
                export imageNameandversion=$ECR_REPO:$IMAGE_NAME
                sed -i "s|containerImageName|$imageNameandversion|" kube-deployment/api-server.yml
                aws eks --region $REGION update-kubeconfig --name $EKS_CLUTER_NAME
                /usr/local/bin/kubectl apply -f kube-deployment/
                unset imageNameandversion
            '''
            }

        }

    }
    post {
        success {  
            emailext body: 'Check console output at $BUILD_URL to view the results.', 
                    to: "${EMAIL_INFORM}", 
                    subject: 'Jenkins - Released $PROJECT_NAME - #$BUILD_NUMBER'
        }

    }
}
